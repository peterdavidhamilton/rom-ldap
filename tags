!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Commands	lib/rom/ldap/commands/create.rb	/^    module Commands$/;"	m	class:ROM.Ldap
Commands	lib/rom/ldap/commands/delete.rb	/^    module Commands$/;"	m	class:ROM.Ldap
Commands	lib/rom/ldap/commands/update.rb	/^    module Commands$/;"	m	class:ROM.Ldap
Create	lib/rom/ldap/commands/create.rb	/^      class Create < ROM::Commands::Create$/;"	c	class:ROM.Ldap.Commands
Dataset	lib/rom/ldap/dataset.rb	/^    class Dataset$/;"	c	class:ROM.Ldap
Delete	lib/rom/ldap/commands/delete.rb	/^      class Delete < ROM::Commands::Delete$/;"	c	class:ROM.Ldap.Commands
Filter	lib/rom/ldap/filter.rb	/^      class Filter$/;"	c	class:ROM.Ldap.Relation
FilterError	lib/rom/ldap/filter.rb	/^        class FilterError < ::StandardError; end$/;"	c	class:ROM.Ldap.Relation.Filter
Gateway	lib/rom/ldap/gateway.rb	/^    class Gateway < ROM::Gateway$/;"	c	class:ROM.Ldap
Ldap	lib/rom/ldap/commands/create.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/commands/delete.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/commands/update.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/dataset.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/filter.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/gateway.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/lookup.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/relation.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/relation/reading.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/relation/writing.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/types.rb	/^  module Ldap$/;"	m	class:ROM
Ldap	lib/rom/ldap/version.rb	/^  module Ldap$/;"	m	class:ROM
Lookup	lib/rom/ldap/lookup.rb	/^    class Lookup < ::Hash$/;"	c	class:ROM.Ldap
ROM	lib/rom/ldap/commands/create.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/commands/delete.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/commands/update.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/dataset.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/filter.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/gateway.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/lookup.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/relation.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/relation/reading.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/relation/writing.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/types.rb	/^module ROM$/;"	m
ROM	lib/rom/ldap/version.rb	/^module ROM$/;"	m
Reading	lib/rom/ldap/relation/reading.rb	/^      module Reading$/;"	m	class:ROM.Ldap.Relation
Relation	lib/rom/ldap/filter.rb	/^    class Relation < ROM::Relation$/;"	c	class:ROM.Ldap
Relation	lib/rom/ldap/relation.rb	/^    class Relation < ROM::Relation$/;"	c	class:ROM.Ldap
Relation	lib/rom/ldap/relation/reading.rb	/^    class Relation < ROM::Relation$/;"	c	class:ROM.Ldap
Relation	lib/rom/ldap/relation/writing.rb	/^    class Relation < ROM::Relation$/;"	c	class:ROM.Ldap
Types	lib/rom/ldap/types.rb	/^    module Types$/;"	m	class:ROM.Ldap
Update	lib/rom/ldap/commands/update.rb	/^      class Update < ROM::Commands::Update$/;"	c	class:ROM.Ldap.Commands
Writing	lib/rom/ldap/relation/writing.rb	/^      module Writing$/;"	m	class:ROM.Ldap.Relation
[]	lib/rom/ldap/gateway.rb	/^      def [](filter)$/;"	f	class:ROM.Ldap
_intersect	lib/rom/ldap/filter.rb	/^        def _intersect(filters)$/;"	f	class:ROM.Ldap.Relation.Filter
_join	lib/rom/ldap/filter.rb	/^        def _join(filters)$/;"	f	class:ROM.Ldap.Relation.Filter
above	lib/rom/ldap/filter.rb	/^        def above(args)$/;"	f	class:ROM.Ldap.Relation.Filter
adapter	lib/rom/ldap/relation.rb	/^      def adapter$/;"	f	class:ROM.Ldap.Relation
add_image	lib/rom/ldap/relation/writing.rb	/^        def add_image(dn, url)$/;"	f	class:ROM.Ldap.Relation.Writing
any?	lib/rom/ldap/relation/reading.rb	/^        def any?$/;"	f	class:ROM.Ldap.Relation.Reading
below	lib/rom/ldap/filter.rb	/^        def below(args)$/;"	f	class:ROM.Ldap.Relation.Filter
build_lookup	lib/rom/ldap/lookup.rb	/^      def build_lookup(key, *args)$/;"	f	class:ROM.Ldap.Lookup
call	lib/rom/ldap/dataset.rb	/^      def call(filter = nil)$/;"	f	class:ROM.Ldap.Dataset
chain	lib/rom/ldap/filter.rb	/^        def chain(args)$/;"	f	class:ROM.Ldap.Relation.Filter
count	lib/rom/ldap/relation/reading.rb	/^        def count$/;"	f	class:ROM.Ldap.Relation.Reading
create_filters	lib/rom/ldap/relation.rb	/^      def self.create_filters$/;"	F	class:ROM.Ldap.Relation
dataset	lib/rom/ldap/gateway.rb	/^      def dataset(filter)$/;"	f	class:ROM.Ldap
dataset	lib/rom/ldap/lookup.rb	/^      def dataset$/;"	f	class:ROM.Ldap.Lookup
dataset?	lib/rom/ldap/gateway.rb	/^      def dataset?(name)$/;"	f	class:ROM.Ldap
delete	lib/rom/ldap/relation/writing.rb	/^        def delete(dn)$/;"	f	class:ROM.Ldap.Relation.Writing
directory	lib/rom/ldap/relation.rb	/^      def directory$/;"	f	class:ROM.Ldap.Relation
dn	lib/rom/ldap/commands/create.rb	/^        def dn(uid)$/;"	f	class:ROM.Ldap.Commands.Create
edit	lib/rom/ldap/relation/writing.rb	/^        def edit(dn, tuple)$/;"	f	class:ROM.Ldap.Relation.Writing
entries_to_hashes	lib/rom/ldap/dataset.rb	/^      def entries_to_hashes(array=[])$/;"	f	class:ROM.Ldap.Dataset
exclude	lib/rom/ldap/filter.rb	/^        def exclude(args)$/;"	f	class:ROM.Ldap.Relation.Filter
execute	lib/rom/ldap/commands/create.rb	/^        def execute(tuples)$/;"	f	class:ROM.Ldap.Commands.Create
execute	lib/rom/ldap/commands/delete.rb	/^        def execute$/;"	f	class:ROM.Ldap.Commands.Delete
execute	lib/rom/ldap/commands/update.rb	/^        def execute(attributes)$/;"	f	class:ROM.Ldap.Commands.Update
filter	lib/rom/ldap/relation.rb	/^      def filter(args)$/;"	f	class:ROM.Ldap.Relation
first	lib/rom/ldap/relation/reading.rb	/^        def first$/;"	f	class:ROM.Ldap.Relation.Reading
generate	lib/rom/ldap/filter.rb	/^        def generate(type, args, stash = [])$/;"	f	class:ROM.Ldap.Relation.Filter
get_image_as_utf8_string	lib/rom/ldap/relation/writing.rb	/^        def get_image_as_utf8_string(url)$/;"	f	class:ROM.Ldap.Relation.Writing
host	lib/rom/ldap/relation.rb	/^      def host$/;"	f	class:ROM.Ldap.Relation
initialize	lib/rom/ldap/dataset.rb	/^      def initialize(connection = nil, cache = nil)$/;"	f	class:ROM.Ldap.Dataset
initialize	lib/rom/ldap/gateway.rb	/^      def initialize(connection, options = {})$/;"	f	class:ROM.Ldap
insert	lib/rom/ldap/relation/writing.rb	/^        def insert(dn, tuple)$/;"	f	class:ROM.Ldap.Relation.Writing
last	lib/rom/ldap/relation/reading.rb	/^        def last$/;"	f	class:ROM.Ldap.Relation.Reading
logger	lib/rom/ldap/dataset.rb	/^      def logger$/;"	f	class:ROM.Ldap.Dataset
lookup	lib/rom/ldap/relation.rb	/^      def lookup$/;"	f	class:ROM.Ldap.Relation
match	lib/rom/ldap/filter.rb	/^        def match(args)$/;"	f	class:ROM.Ldap.Relation.Filter
method_missing	lib/rom/ldap/lookup.rb	/^      def method_missing(name, *args)$/;"	f	class:ROM.Ldap.Lookup
none?	lib/rom/ldap/relation/reading.rb	/^        def none?$/;"	f	class:ROM.Ldap.Relation.Reading
not	lib/rom/ldap/filter.rb	/^        def not(args)$/;"	f	class:ROM.Ldap.Relation.Filter
op_status	lib/rom/ldap/relation.rb	/^      def op_status$/;"	f	class:ROM.Ldap.Relation
order	lib/rom/ldap/relation/reading.rb	/^        def order(attribute)$/;"	f	class:ROM.Ldap.Relation.Reading
prefix	lib/rom/ldap/filter.rb	/^        def prefix$/;"	f	class:ROM.Ldap.Relation.Filter
query_directory	lib/rom/ldap/dataset.rb	/^      def query_directory(filter)$/;"	f	class:ROM.Ldap.Dataset
search	lib/rom/ldap/relation.rb	/^      def search(filter)$/;"	f	class:ROM.Ldap.Relation
search!	lib/rom/ldap/lookup.rb	/^      def search!$/;"	f	class:ROM.Ldap.Lookup
suffix	lib/rom/ldap/filter.rb	/^        def suffix$/;"	f	class:ROM.Ldap.Relation.Filter
unique?	lib/rom/ldap/relation/reading.rb	/^        def unique?$/;"	f	class:ROM.Ldap.Relation.Reading
where	lib/rom/ldap/filter.rb	/^        def where(args)$/;"	f	class:ROM.Ldap.Relation.Filter
with_attribute	lib/rom/ldap/filter.rb	/^        def with_attribute(arg)$/;"	f	class:ROM.Ldap.Relation.Filter
within	lib/rom/ldap/filter.rb	/^        def within(range)$/;"	f	class:ROM.Ldap.Relation.Filter
