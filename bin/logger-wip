#!/usr/bin/env ruby
# frozen_string_literal: true

#
# WIP for dry-monitor
#
require 'bundler/setup'
Bundler.setup

require 'pry-byebug'
require 'rom-ldap'
require 'rom-repository'
require 'rom-changeset'

config = ROM::Configuration.new(:ldap, extensions: %i[compatibility])

require 'dry/monitor/notifications'
notifications = Dry::Monitor::Notifications.new(:console)

config.plugin :ldap, relations: :instrumentation do |c|
  c.notifications = notifications
end

require 'dry/monitor/ldap/logger'
# Dry::Monitor::LDAP::Logger.new(Logger.new($stdout)).subscribe(notifications)
monitor = Dry::Monitor::LDAP::Logger.new(Logger.new($stdout))
# require 'rouge/themes/ldap'
# monitor.config.theme = ::Rouge::Themes::LDAP.new
require 'rouge/themes/magritte'
monitor.config.theme = ::Rouge::Themes::Magritte.new

monitor.subscribe(notifications)

config.relation(:entries) do
  schema('(objectClass=*)', infer: true) do
    use :timestamps,
        attributes: %i[create_timestamp modify_timestamp],
        type: ROM::LDAP::Types::Time
  end

  branches animals: 'ou=animals,dc=rom,dc=ldap',
           users: 'ou=users,dc=rom,dc=ldap'
end

rom = ROM.container(config)

repo = Class.new(ROM::Repository[:entries]) do
  commands :create, update: :by_pk, delete: :by_pk
end.new(rom)

ldap = rom.relations[:entries]

Pry.start(self)