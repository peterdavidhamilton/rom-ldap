#!/usr/bin/env ruby
# frozen_string_literal: true
#
# Comparison of rom-ldap against ruby-net-ldap
#
require 'bundler/setup'
Bundler.setup

require 'pry-byebug'
require 'benchmark/ips'
require 'net-ldap'
require 'rom-ldap'

filter = '(cn=*)'
file = 'spec/fixtures/ldif/users.ldif'

ENV['LDAPHOST'] = 'localhost'
ENV['LDAPPORT'] = '2389'
ENV['LDAPBASE'] = 'ou=users,dc=rom,dc=ldap'
ENV['LDAPBINDDN'] = 'cn=admin,dc=rom,dc=ldap'
# ENV['LDAPBINDDN'] = 'cn=Directory Manager'
ENV['LDAPBINDPW'] = 'topsecret'
# ENV['LDAPBINDDN'] = 'uid=admin,ou=system'
# ENV['LDAPBINDPW'] = 'secret'


net_ldap = Net::LDAP.new(
  host: ENV['LDAPHOST'],
  port: ENV['LDAPPORT'],
  base: ENV['LDAPBASE'],
  auth: {
    method: :simple,
    username: ENV['LDAPBINDDN'],
    password: ENV['LDAPBINDPW']
  }
)

config = ROM::Configuration.new(:ldap) do |c|
  c.relation(:ldap) { schema(filter, infer: true) }
end

rom = ROM.container(config)

dataset = rom.relations[:ldap].dataset

ROM::LDAP::LDIF(File.read(file)) { |entry| dataset.add(entry) } if dataset.count.zero?

puts "Testing against #{dataset.total} entries"

Benchmark.ips do |bm|
  bm.report('NET::LDAP') do
    net_ldap.search(filter: filter, attributes: %w[* +])
  end

  bm.report('rom-ldap') do
    rom.relations[:ldap].operational.to_a
  end

  bm.compare!
end
